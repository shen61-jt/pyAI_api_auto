{"uid":"3150b929db98b41c","name":"test_recharge[case1]","fullName":"testcases.student.test_4_recharge#test_recharge","historyId":"9a4a8f94bfbcd3f462a7193ba17ac3dc","time":{"start":1758533436179,"stop":1758533436182,"duration":3},"description":"描述：充值模块","descriptionHtml":"<p>描述：充值模块</p>\n","status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 15 (char 14)","statusTrace":"case = {'提取响应字段': None, '数据库断言': None, '期望结果': '{\"status_code\":200}', '用例标题': '充值', ...}\n\n>   ???\n\nD:\\Pycharm-Workspace\\api_auto-master\\testcases\\shop\\test_4_recharge.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\base_test.py:90: in send_request\n    res = request(method, url, json=json.loads(params), headers=dic_headers)\nC:\\Program Files\\Python39\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nC:\\Program Files\\Python39\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001E4C5AB2FA0>\ns = '{\"member_id\": ${id}, \"amount\": 10000.0, \"timestamp\": 1758533416, \"sign\": \"${sign}\"}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 15 (char 14)\n\nC:\\Program Files\\Python39\\lib\\json\\decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758533416614,"stop":1758533416645,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"setup_class","time":{"start":1758533416645,"stop":1758533416646,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"teardown_class","time":{"start":1758533416646,"stop":1758533416646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"testStage":{"description":"描述：充值模块","status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 15 (char 14)","statusTrace":"case = {'提取响应字段': None, '数据库断言': None, '期望结果': '{\"status_code\":200}', '用例标题': '充值', ...}\n\n>   ???\n\nD:\\Pycharm-Workspace\\api_auto-master\\testcases\\shop\\test_4_recharge.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\base_test.py:90: in send_request\n    res = request(method, url, json=json.loads(params), headers=dic_headers)\nC:\\Program Files\\Python39\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nC:\\Program Files\\Python39\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001E4C5AB2FA0>\ns = '{\"member_id\": ${id}, \"amount\": 10000.0, \"timestamp\": 1758533416, \"sign\": \"${sign}\"}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 15 (char 14)\n\nC:\\Program Files\\Python39\\lib\\json\\decoder.py:355: JSONDecodeError","steps":[],"attachments":[{"uid":"9348d561d8d61963","name":"用例标题","source":"9348d561d8d61963.attach","type":"text/plain","size":6},{"uid":"3ba171fa2d19443a","name":"请求方法","source":"3ba171fa2d19443a.attach","type":"text/plain","size":4},{"uid":"f28a9bf0c9b95608","name":"请求地址","source":"f28a9bf0c9b95608.attach","type":"text/plain","size":55},{"uid":"e0a2a5ac342d8b64","name":"请求头","source":"e0a2a5ac342d8b64.txt","type":"text/plain","size":139},{"uid":"460856b349e8a631","name":"请求参数","source":"460856b349e8a631.txt","type":"text/plain","size":83}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":5,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"teardown_class::0","time":{"start":1758533453517,"stop":1758533453559,"duration":42},"status":"passed","steps":[],"attachments":[{"uid":"a29addc18b2579d0","name":"fixture后置处理","source":"a29addc18b2579d0.txt","type":"text/plain","size":18}],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"stepsCount":0},{"name":"setup_class::0","time":{"start":1758533453560,"stop":1758533453560,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"feature","value":"充值模块"},{"name":"severity","value":"blocker"},{"name":"epic","value":"AI学生端项目"},{"name":"parentSuite","value":"testcases.student"},{"name":"suite","value":"test_4_recharge"},{"name":"host","value":"DESKTOP-GLFP8VP"},{"name":"thread","value":"104384-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.student.test_4_recharge"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'用例编号': 2, '用例标题': '充值', '请求地址': 'http://api.lemonban.com:8788/futureloan/member/recharge', '请求方法': 'POST', '请求头': '{\"X-Lemonban-Media-Type\": \"lemonban.v3\", \"Content-Type\": \"application/json\",\"Authorization\": \"Bearer ${token}\"}', '请求参数': '{\"member_id\": ${id}, \"amount\": 10000.0, \"timestamp\": ${timestamp}, \"sign\": \"${sign}\"}', '期望结果': '{\"status_code\":200}', '数据库断言': None, '提取响应字段': None}"}],"links":[{"name":"接口地址","url":"http://shop.lemonban.com:8107/login","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"3150b929db98b41c.json","parameterValues":["{'用例编号': 2, '用例标题': '充值', '请求地址': 'http://api.lemonban.com:8788/futureloan/member/recharge', '请求方法': 'POST', '请求头': '{\"X-Lemonban-Media-Type\": \"lemonban.v3\", \"Content-Type\": \"application/json\",\"Authorization\": \"Bearer ${token}\"}', '请求参数': '{\"member_id\": ${id}, \"amount\": 10000.0, \"timestamp\": ${timestamp}, \"sign\": \"${sign}\"}', '期望结果': '{\"status_code\":200}', '数据库断言': None, '提取响应字段': None}"]}