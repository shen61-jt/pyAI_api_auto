{"uid":"e5b721070e92a91e","name":"test_order[case4]","fullName":"testcases.student.test_6_order#test_order","historyId":"e2d72b36700ea90ca92dcfc36e3c6506","time":{"start":1758533442455,"stop":1758533443876,"duration":1421},"description":"描述：订单模块","descriptionHtml":"<p>描述：订单模块</p>\n","status":"broken","statusMessage":"TypeError: 'bool' object is not subscriptable","statusTrace":"case = {'提取响应字段': '{\"basket_id\":\"$..basketId\"}', '数据库断言': None, '期望结果': '{\"status_code\":200}', '用例标题': '查询购物车', ...}\n\n>   ???\n\nD:\\Pycharm-Workspace\\api_auto-master\\testcases\\shop\\test_6_order.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncase = {'提取响应字段': '{\"basket_id\":\"$..basketId\"}', '数据库断言': None, '期望结果': '{\"status_code\":200}', '用例标题': '查询购物车', ...}\nres = <Response [200]>\n\n    def extract_res(case, res):\n        \"\"\"\n        提取响应字段\n        :param case: 用例数据\n        :param res: 响应结果\n        :return: 没有返回\n        \"\"\"\n        # 提取响应字段\n        extract_info = case['提取响应字段']\n        logger.info('-------------------------提取响应---------------------------')\n        if extract_info:\n            extract_dict = json.loads(extract_info)\n            # for循环处理字典 {\"token\":\"$..access_token\",\"nickname\":\"$..nickname\"}\n            for k, v in extract_dict.items():\n                # 两种情况：jsonpath提取响应字段的值、整个响应体文本数据提取\n                if v == 'text':\n                    value = res.text\n                    logger.info(f'提取的字段：{k}，值：{value}')\n                else:\n>                   value = jsonpath.jsonpath(res.json(), v)[0]\nE                   TypeError: 'bool' object is not subscriptable\n\ncommon\\base_test.py:276: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758533416614,"stop":1758533416645,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"setup_class","time":{"start":1758533416645,"stop":1758533416646,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"teardown_class","time":{"start":1758533416646,"stop":1758533416646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"testStage":{"description":"描述：订单模块","status":"broken","statusMessage":"TypeError: 'bool' object is not subscriptable","statusTrace":"case = {'提取响应字段': '{\"basket_id\":\"$..basketId\"}', '数据库断言': None, '期望结果': '{\"status_code\":200}', '用例标题': '查询购物车', ...}\n\n>   ???\n\nD:\\Pycharm-Workspace\\api_auto-master\\testcases\\shop\\test_6_order.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncase = {'提取响应字段': '{\"basket_id\":\"$..basketId\"}', '数据库断言': None, '期望结果': '{\"status_code\":200}', '用例标题': '查询购物车', ...}\nres = <Response [200]>\n\n    def extract_res(case, res):\n        \"\"\"\n        提取响应字段\n        :param case: 用例数据\n        :param res: 响应结果\n        :return: 没有返回\n        \"\"\"\n        # 提取响应字段\n        extract_info = case['提取响应字段']\n        logger.info('-------------------------提取响应---------------------------')\n        if extract_info:\n            extract_dict = json.loads(extract_info)\n            # for循环处理字典 {\"token\":\"$..access_token\",\"nickname\":\"$..nickname\"}\n            for k, v in extract_dict.items():\n                # 两种情况：jsonpath提取响应字段的值、整个响应体文本数据提取\n                if v == 'text':\n                    value = res.text\n                    logger.info(f'提取的字段：{k}，值：{value}')\n                else:\n>                   value = jsonpath.jsonpath(res.json(), v)[0]\nE                   TypeError: 'bool' object is not subscriptable\n\ncommon\\base_test.py:276: TypeError","steps":[],"attachments":[{"uid":"53e6522fb42609d8","name":"用例标题","source":"53e6522fb42609d8.attach","type":"text/plain","size":15},{"uid":"fedc77667b1d3936","name":"请求方法","source":"fedc77667b1d3936.attach","type":"text/plain","size":4},{"uid":"66a33ab12df0345e","name":"请求地址","source":"66a33ab12df0345e.attach","type":"text/plain","size":45},{"uid":"b635491b1b7fa14d","name":"请求头","source":"b635491b1b7fa14d.txt","type":"text/plain","size":110},{"uid":"b70a0f3687f0f901","name":"请求参数","source":"b70a0f3687f0f901.txt","type":"text/plain","size":2},{"uid":"9d97bc6f1fb741f5","name":"响应状态码","source":"9d97bc6f1fb741f5.txt","type":"text/plain","size":3},{"uid":"ef897a5c7bb3b63","name":"响应时间","source":"ef897a5c7bb3b63.txt","type":"text/plain","size":11},{"uid":"38b14dc91b3a397e","name":"响应头","source":"38b14dc91b3a397e.txt","type":"text/plain","size":498},{"uid":"7b25e4485245b5d8","name":"响应体","source":"7b25e4485245b5d8.txt","type":"text/plain","size":2}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":9,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"teardown_class::0","time":{"start":1758533453517,"stop":1758533453559,"duration":42},"status":"passed","steps":[],"attachments":[{"uid":"a29addc18b2579d0","name":"fixture后置处理","source":"a29addc18b2579d0.txt","type":"text/plain","size":18}],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"stepsCount":0},{"name":"setup_class::0","time":{"start":1758533453560,"stop":1758533453560,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"feature","value":"订单模块"},{"name":"severity","value":"blocker"},{"name":"epic","value":"AI学生端项目"},{"name":"parentSuite","value":"testcases.student"},{"name":"suite","value":"test_6_order"},{"name":"host","value":"DESKTOP-GLFP8VP"},{"name":"thread","value":"104384-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.student.test_6_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'用例编号': 5, '用例标题': '查询购物车', '请求地址': 'http://shop.lemonban.com:8107/p/shopCart/info', '请求方法': 'POST', '请求头': '{\"Authorization\":\"bearer${token}\",\"Content-Type\":\"application/json;charset=utf-8\"}', '请求参数': '[]', '期望结果': '{\"status_code\":200}', '提取响应字段': '{\"basket_id\":\"$..basketId\"}', '数据库断言': None}"}],"links":[{"name":"接口地址","url":"http://shop.lemonban.com:8107/login","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"e5b721070e92a91e.json","parameterValues":["{'用例编号': 5, '用例标题': '查询购物车', '请求地址': 'http://shop.lemonban.com:8107/p/shopCart/info', '请求方法': 'POST', '请求头': '{\"Authorization\":\"bearer${token}\",\"Content-Type\":\"application/json;charset=utf-8\"}', '请求参数': '[]', '期望结果': '{\"status_code\":200}', '提取响应字段': '{\"basket_id\":\"$..basketId\"}', '数据库断言': None}"]}