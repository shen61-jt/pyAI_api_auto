{"uid":"9dd82c15eec2dbb2","name":"test_order[case5]","fullName":"testcases.student.test_6_order#test_order","historyId":"b66c1a024f347b35769c0db102e96a19","time":{"start":1758508019589,"stop":1758508019594,"duration":5},"description":"描述：订单模块","descriptionHtml":"<p>描述：订单模块</p>\n","status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 26 (char 25)","statusTrace":"case = {'提取响应字段': None, '数据库断言': None, '期望结果': '{\"status_code\":200}', '用例标题': '确认订单', ...}\n\n>   ???\n\nD:\\Pycharm-Workspace\\api_auto-master\\testcases\\shop\\test_6_order.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\base_test.py:90: in send_request\n    res = request(method, url, json=json.loads(params), headers=dic_headers)\nC:\\Program Files\\Python39\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nC:\\Program Files\\Python39\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000019FAB8126D0>\ns = '{\"addrId\":0,\"basketIds\":[${basket_id}],\"couponIds\":[],\"isScorePay\":0,\"userChangeCoupon\":0,\"userUseScore\":0,\"uuid\":\"87140837-672c-410a-89d1-be4d690a401e\"}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 26 (char 25)\n\nC:\\Program Files\\Python39\\lib\\json\\decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758508007116,"stop":1758508007147,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup_class","time":{"start":1758508007147,"stop":1758508007147,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"teardown_class","time":{"start":1758508007147,"stop":1758508007147,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"描述：订单模块","status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 26 (char 25)","statusTrace":"case = {'提取响应字段': None, '数据库断言': None, '期望结果': '{\"status_code\":200}', '用例标题': '确认订单', ...}\n\n>   ???\n\nD:\\Pycharm-Workspace\\api_auto-master\\testcases\\shop\\test_6_order.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\base_test.py:90: in send_request\n    res = request(method, url, json=json.loads(params), headers=dic_headers)\nC:\\Program Files\\Python39\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\nC:\\Program Files\\Python39\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000019FAB8126D0>\ns = '{\"addrId\":0,\"basketIds\":[${basket_id}],\"couponIds\":[],\"isScorePay\":0,\"userChangeCoupon\":0,\"userUseScore\":0,\"uuid\":\"87140837-672c-410a-89d1-be4d690a401e\"}'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 26 (char 25)\n\nC:\\Program Files\\Python39\\lib\\json\\decoder.py:355: JSONDecodeError","steps":[],"attachments":[{"uid":"96cdcc42c453e200","name":"用例标题","source":"96cdcc42c453e200.attach","type":"text/plain","size":12},{"uid":"555f00ed54c1cb1f","name":"请求方法","source":"555f00ed54c1cb1f.attach","type":"text/plain","size":4},{"uid":"c5d64078bbf47660","name":"请求地址","source":"c5d64078bbf47660.attach","type":"text/plain","size":45},{"uid":"b14ba7cc9862b6ab","name":"请求头","source":"b14ba7cc9862b6ab.txt","type":"text/plain","size":110},{"uid":"ec746c23891e2267","name":"请求参数","source":"ec746c23891e2267.txt","type":"text/plain","size":153}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":5},"afterStages":[{"name":"teardown_class::0","time":{"start":1758508020088,"stop":1758508020123,"duration":35},"status":"passed","steps":[],"attachments":[{"uid":"6c906deaecf32aa3","name":"fixture后置处理","source":"6c906deaecf32aa3.txt","type":"text/plain","size":18}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"setup_class::0","time":{"start":1758508020123,"stop":1758508020123,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"epic","value":"AI学生端项目"},{"name":"feature","value":"订单模块"},{"name":"severity","value":"blocker"},{"name":"parentSuite","value":"testcases.student"},{"name":"suite","value":"test_6_order"},{"name":"host","value":"DESKTOP-GLFP8VP"},{"name":"thread","value":"54672-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.student.test_6_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'用例编号': 6, '用例标题': '确认订单', '请求地址': 'http://shop.lemonban.com:8107/p/order/confirm', '请求方法': 'POST', '请求头': '{\"Authorization\":\"bearer${token}\",\"Content-Type\":\"application/json;charset=utf-8\"}', '请求参数': '{\"addrId\":0,\"basketIds\":[${basket_id}],\"couponIds\":[],\"isScorePay\":0,\"userChangeCoupon\":0,\"userUseScore\":0,\"uuid\":\"87140837-672c-410a-89d1-be4d690a401e\"}', '期望结果': '{\"status_code\":200}', '提取响应字段': None, '数据库断言': None}"}],"links":[{"name":"接口地址","url":"http://shop.lemonban.com:8107/login","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"9dd82c15eec2dbb2.json","parameterValues":["{'用例编号': 6, '用例标题': '确认订单', '请求地址': 'http://shop.lemonban.com:8107/p/order/confirm', '请求方法': 'POST', '请求头': '{\"Authorization\":\"bearer${token}\",\"Content-Type\":\"application/json;charset=utf-8\"}', '请求参数': '{\"addrId\":0,\"basketIds\":[${basket_id}],\"couponIds\":[],\"isScorePay\":0,\"userChangeCoupon\":0,\"userUseScore\":0,\"uuid\":\"87140837-672c-410a-89d1-be4d690a401e\"}', '期望结果': '{\"status_code\":200}', '提取响应字段': None, '数据库断言': None}"]}