{"uid":"ccb6924008580970","name":"test_order[case6]","fullName":"testcases.student.test_6_order#test_order","historyId":"06c5c1865e99ec46c1e16639718bb07d","time":{"start":1758523051909,"stop":1758523051990,"duration":81},"description":"描述：订单模块","descriptionHtml":"<p>描述：订单模块</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"case = {'提取响应字段': '{\"order_number\":\"$.orderNumbers\"}', '数据库断言': '{\"select count(*) from tz_order where order_number =\\'${order_number}\\';\":1}', '期望结果': '{\"status_code\":200}', '用例标题': '提交订单', ...}\n\n>   ???\n\nD:\\Pycharm-Workspace\\api_auto-master\\testcases\\shop\\test_6_order.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncase = {'提取响应字段': '{\"order_number\":\"$.orderNumbers\"}', '数据库断言': '{\"select count(*) from tz_order where order_number =\\'${order_number}\\';\":1}', '期望结果': '{\"status_code\":200}', '用例标题': '提交订单', ...}\nres = <Response [400]>\n\n    def assert_res(case, res):\n        \"\"\"\n        统一响应断言封装\n        :param case: 用例数据\n        :param res: 接口响应\n        :return: 没有返回\n        \"\"\"\n        # 获取期望结果\n        case_expect = case['期望结果']\n        if case_expect:\n            logger.info('-------------------------断言日志---------------------------')\n            dic = json.loads(case_expect)\n            # 遍历期望结果字典，k：响应字段，v：期望结果\n            for k, v in dic.items():\n                # 响应状态码断言\n                if k == 'status_code':\n>                   assert res.status_code == v\nE                   AssertionError\n\ncommon\\base_test.py:133: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758523042709,"stop":1758523042744,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"teardown_class","time":{"start":1758523042744,"stop":1758523042744,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"setup_class","time":{"start":1758523042744,"stop":1758523042744,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"description":"描述：订单模块","status":"failed","statusMessage":"AssertionError","statusTrace":"case = {'提取响应字段': '{\"order_number\":\"$.orderNumbers\"}', '数据库断言': '{\"select count(*) from tz_order where order_number =\\'${order_number}\\';\":1}', '期望结果': '{\"status_code\":200}', '用例标题': '提交订单', ...}\n\n>   ???\n\nD:\\Pycharm-Workspace\\api_auto-master\\testcases\\shop\\test_6_order.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncase = {'提取响应字段': '{\"order_number\":\"$.orderNumbers\"}', '数据库断言': '{\"select count(*) from tz_order where order_number =\\'${order_number}\\';\":1}', '期望结果': '{\"status_code\":200}', '用例标题': '提交订单', ...}\nres = <Response [400]>\n\n    def assert_res(case, res):\n        \"\"\"\n        统一响应断言封装\n        :param case: 用例数据\n        :param res: 接口响应\n        :return: 没有返回\n        \"\"\"\n        # 获取期望结果\n        case_expect = case['期望结果']\n        if case_expect:\n            logger.info('-------------------------断言日志---------------------------')\n            dic = json.loads(case_expect)\n            # 遍历期望结果字典，k：响应字段，v：期望结果\n            for k, v in dic.items():\n                # 响应状态码断言\n                if k == 'status_code':\n>                   assert res.status_code == v\nE                   AssertionError\n\ncommon\\base_test.py:133: AssertionError","steps":[],"attachments":[{"uid":"5643a4b6bd4c3180","name":"用例标题","source":"5643a4b6bd4c3180.attach","type":"text/plain","size":12},{"uid":"f41823bf38aaf364","name":"请求方法","source":"f41823bf38aaf364.attach","type":"text/plain","size":4},{"uid":"889dd70e3382fab0","name":"请求地址","source":"889dd70e3382fab0.attach","type":"text/plain","size":44},{"uid":"f46ad9bb5a371067","name":"请求头","source":"f46ad9bb5a371067.txt","type":"text/plain","size":110},{"uid":"b729d0d240125ddd","name":"请求参数","source":"b729d0d240125ddd.txt","type":"text/plain","size":92},{"uid":"a6ca2e216bb0adf9","name":"响应状态码","source":"a6ca2e216bb0adf9.txt","type":"text/plain","size":3},{"uid":"baf0dc64180a9285","name":"响应时间","source":"baf0dc64180a9285.txt","type":"text/plain","size":11},{"uid":"e6c16bec27371c71","name":"响应头","source":"e6c16bec27371c71.txt","type":"text/plain","size":498},{"uid":"8365630310f4aa35","name":"响应体","source":"8365630310f4aa35.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":9,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"teardown_class::0","time":{"start":1758523052355,"stop":1758523052392,"duration":37},"status":"passed","steps":[],"attachments":[{"uid":"b6d14979e976e363","name":"fixture后置处理","source":"b6d14979e976e363.txt","type":"text/plain","size":18}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"setup_class::0","time":{"start":1758523052397,"stop":1758523052397,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"订单模块"},{"name":"severity","value":"blocker"},{"name":"epic","value":"AI学生端项目"},{"name":"parentSuite","value":"testcases.student"},{"name":"suite","value":"test_6_order"},{"name":"host","value":"DESKTOP-GLFP8VP"},{"name":"thread","value":"99452-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.student.test_6_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'用例编号': 7, '用例标题': '提交订单', '请求地址': 'http://shop.lemonban.com:8107/p/order/submit', '请求方法': 'POST', '请求头': '{\"Authorization\":\"bearer${token}\",\"Content-Type\":\"application/json;charset=utf-8\"}', '请求参数': '{\"orderShopParam\":[{\"remarks\":\"\",\"shopId\":1}],\"uuid\":\"87140837-672c-410a-89d1-be4d690a401e\"}', '期望结果': '{\"status_code\":200}', '提取响应字段': '{\"order_number\":\"$.orderNumbers\"}', '数据库断言': '{\"select count(*) from tz_order where order_number =\\'${order_number}\\';\":1}'}"}],"links":[{"name":"接口地址","url":"http://shop.lemonban.com:8107/login","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"ccb6924008580970.json","parameterValues":["{'用例编号': 7, '用例标题': '提交订单', '请求地址': 'http://shop.lemonban.com:8107/p/order/submit', '请求方法': 'POST', '请求头': '{\"Authorization\":\"bearer${token}\",\"Content-Type\":\"application/json;charset=utf-8\"}', '请求参数': '{\"orderShopParam\":[{\"remarks\":\"\",\"shopId\":1}],\"uuid\":\"87140837-672c-410a-89d1-be4d690a401e\"}', '期望结果': '{\"status_code\":200}', '提取响应字段': '{\"order_number\":\"$.orderNumbers\"}', '数据库断言': '{\"select count(*) from tz_order where order_number =\\'${order_number}\\';\":1}'}"]}