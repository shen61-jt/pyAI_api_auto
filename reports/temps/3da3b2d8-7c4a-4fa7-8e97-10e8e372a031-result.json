{"name": "test_register[case19]", "status": "broken", "statusDetails": {"message": "TypeError: the JSON object must be str, bytes or bytearray, not NoneType", "trace": "case = {'提取响应字段': None, '数据库断言': None, '期望结果': '{\"code\": 401, \"msg\": \"未授权\"}', '用例标题': '分页获取我的小课包列表【学生端】_无权限', ...}\n\n    @allure.epic('AI家长端项目')\n    @allure.feature('所有模块')\n    @allure.description(\"描述：所有测试模块\")\n    @allure.link(url=\"https://minicourse.test.venhalo.com\", name=\"接口地址\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @pytest.mark.skipif(IS_CI_ENV, reason=\"在CI环境中跳过需要数据库连接的测试\")\n    @pytest.mark.parametrize('case', case_datas)\n    def test_register(case):\n>       res = send_request(case)\n\ntestcases\\parent\\test_2_all_parent.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\base_test.py:90: in send_request\n    res = request(method, url, json=json.loads(params), headers=dic_headers)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ns = None, cls = None, object_hook = None, parse_float = None, parse_int = None\nparse_constant = None, object_pairs_hook = None, kw = {}\n\n    def loads(s, *, cls=None, object_hook=None, parse_float=None,\n            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n        \"\"\"Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance\n        containing a JSON document) to a Python object.\n    \n        ``object_hook`` is an optional function that will be called with the\n        result of any object literal decode (a ``dict``). The return value of\n        ``object_hook`` will be used instead of the ``dict``. This feature\n        can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n    \n        ``object_pairs_hook`` is an optional function that will be called with the\n        result of any object literal decoded with an ordered list of pairs.  The\n        return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n        This feature can be used to implement custom decoders.  If ``object_hook``\n        is also defined, the ``object_pairs_hook`` takes priority.\n    \n        ``parse_float``, if specified, will be called with the string\n        of every JSON float to be decoded. By default this is equivalent to\n        float(num_str). This can be used to use another datatype or parser\n        for JSON floats (e.g. decimal.Decimal).\n    \n        ``parse_int``, if specified, will be called with the string\n        of every JSON int to be decoded. By default this is equivalent to\n        int(num_str). This can be used to use another datatype or parser\n        for JSON integers (e.g. float).\n    \n        ``parse_constant``, if specified, will be called with one of the\n        following strings: -Infinity, Infinity, NaN.\n        This can be used to raise an exception if invalid JSON numbers\n        are encountered.\n    \n        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n        kwarg; otherwise ``JSONDecoder`` is used.\n        \"\"\"\n        if isinstance(s, str):\n            if s.startswith('\\ufeff'):\n                raise JSONDecodeError(\"Unexpected UTF-8 BOM (decode using utf-8-sig)\",\n                                      s, 0)\n        else:\n            if not isinstance(s, (bytes, bytearray)):\n>               raise TypeError(f'the JSON object must be str, bytes or bytearray, '\n                                f'not {s.__class__.__name__}')\nE               TypeError: the JSON object must be str, bytes or bytearray, not NoneType\n\nC:\\Program Files\\Python39\\lib\\json\\__init__.py:339: TypeError"}, "description": "描述：所有测试模块", "attachments": [{"name": "用例标题", "source": "e44300dc-e6a2-4c39-b7d2-d5f8fb8c6fda-attachment.attach"}, {"name": "请求方法", "source": "44c5187e-37dc-4ead-82e3-15501fb1949d-attachment.attach"}, {"name": "请求地址", "source": "84ec08bc-ec20-4fd7-bf36-2bd4e36d5572-attachment.attach"}, {"name": "请求头", "source": "e0f034ac-0cc1-4599-8a1b-9f51949ac380-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'用例编号': 20, '用例标题': '分页获取我的小课包列表【学生端】_无权限', '请求方法': 'POST', '请求地址': 'https://minicourse.test.venhalo.com/api/v1/minicourse/stu/list', '请求头': '{\"Content-Type\": \"application/json\"}', '请求参数': None, '期望结果': '{\"code\": 401, \"msg\": \"未授权\"}', '数据库断言': None, '提取响应字段': None}"}], "start": 1758618430803, "stop": 1758618430804, "uuid": "c233db78-bdb7-4cff-afbc-fdfe13af231f", "historyId": "bc12f50ffdbdea481b7b1526569b44a1", "testCaseId": "f894bec99670d2ceb6a8fed7011e5671", "fullName": "testcases.parent.test_2_all_parent#test_register", "labels": [{"name": "feature", "value": "所有模块"}, {"name": "severity", "value": "blocker"}, {"name": "epic", "value": "AI家长端项目"}, {"name": "parentSuite", "value": "testcases.parent"}, {"name": "suite", "value": "test_2_all_parent"}, {"name": "host", "value": "DESKTOP-GLFP8VP"}, {"name": "thread", "value": "25008-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.parent.test_2_all_parent"}], "links": [{"type": "link", "url": "https://minicourse.test.venhalo.com", "name": "接口地址"}], "titlePath": ["testcases", "parent", "test_2_all_parent.py"]}